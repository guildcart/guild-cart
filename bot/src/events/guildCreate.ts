import { Events, Guild, EmbedBuilder } from 'discord.js';
import { logger } from '../utils/logger';
import { apiClient } from '../utils/apiClient';

export const name = Events.GuildCreate;
export const once = false;

export async function execute(guild: Guild) {
  logger.info(`‚úÖ Bot ajout√© au serveur: ${guild.name} (${guild.id})`);

  try {
    // 1Ô∏è‚É£ R√©cup√©rer le propri√©taire du serveur
    const owner = await guild.fetchOwner();

    // 2Ô∏è‚É£ Cr√©er automatiquement le serveur et l'utilisateur dans la BDD
    try {
      await apiClient.createGuildInDatabase({
        guildId: guild.id,
        guildName: guild.name,
        ownerId: owner.id,
        ownerUsername: owner.user.username,
        ownerAvatar: owner.user.displayAvatarURL(),
      });

      logger.info(`‚úÖ Serveur ${guild.name} cr√©√© dans la base de donn√©es`);
    } catch (error: any) {
      // Si le serveur existe d√©j√† ou autre erreur, on log mais on continue
      if (error.response?.status === 409 || error.message?.includes('already exists')) {
        logger.warn(`‚ö†Ô∏è Le serveur ${guild.name} existe d√©j√† dans la BDD`);
      } else {
        logger.error(`‚ùå Erreur lors de la cr√©ation du serveur dans la BDD:`, error);
      }
    }

    // 3Ô∏è‚É£ Envoyer le message de bienvenue
    const channel = guild.systemChannel || guild.channels.cache.find(
      (c) => c.isTextBased() && c.permissionsFor(guild.members.me!)?.has('SendMessages')
    );

    if (!channel || !channel.isTextBased()) {
      logger.warn('Impossible de trouver un salon pour envoyer le message de bienvenue');
      return;
    }

    const welcomeEmbed = new EmbedBuilder()
      .setColor(0x5865F2)
      .setTitle('üëã Merci d\'avoir ajout√© Guild Cart !')
      .setDescription(
        'Transforme ton serveur Discord en boutique en ligne !\n\n' +
        '**‚úÖ Ton serveur a √©t√© automatiquement enregistr√© !**\n\n' +
        '**Pour commencer :**\n' +
        '1Ô∏è‚É£ Connecte-toi au panel web avec Discord\n' +
        '2Ô∏è‚É£ Ajoute tes produits (PDF, comptes, r√¥les)\n' +
        '3Ô∏è‚É£ Tes membres pourront acheter avec `/shop`\n\n' +
        '**Commandes disponibles :**\n' +
        '‚Ä¢ `/shop` - Voir la boutique\n' +
        '‚Ä¢ `/inventory` - Voir ses achats\n' +
        '‚Ä¢ `/setup` - Configurer la boutique (admin)'
      )
      .addFields(
        {
          name: 'üîó Panel Web',
          value: `[Acc√©der au dashboard](${process.env.FRONTEND_URL || 'http://localhost:5173'})`,
          inline: true,
        },
        {
          name: 'üí∞ Commissions',
          value: 'Plan FREE : 5%\nUpgrade disponible',
          inline: true,
        }
      )
      .setFooter({ text: 'Besoin d\'aide ? Utilise /setup' })
      .setTimestamp();

    await channel.send({ embeds: [welcomeEmbed] });
  } catch (error) {
    logger.error('Erreur dans l\'√©v√©nement guildCreate:', error);
  }
}